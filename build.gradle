/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 the original author or authors.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

allprojects {
    group = projectGroupId
    version = projectVersion
}

subprojects {
    if(new File(project.projectDir, 'src/main/java')) {
        apply plugin: 'java'

        sourceCompatibility = 1.8
        targetCompatibility = 1.8

        compileJava {
            options.compilerArgs << '-Xlint:deprecation'
            options.compilerArgs << '-Xlint:unchecked'
            options.compilerArgs << '-Werror'
        }

        compileTestJava {
            options.compilerArgs << '-Xlint:deprecation'
            options.compilerArgs << '-Xlint:unchecked'
            options.compilerArgs << '-Werror'
        }

        repositories {
            mavenCentral()
        }

        apply plugin: 'findbugs'

        findbugs {
            toolVersion = "3.0.1"
        }

        tasks.withType(FindBugs) {
            reports {
                xml.enabled = false
                html.enabled = true
            }
        }

        findbugsMain.classes = findbugsMain.classes.filter {f -> return f.toString().contains(".class")}
        findbugsTest.enabled = false

        apply plugin: 'checkstyle'
        checkstyle {
            configFile = new File(rootDir, "checkstyle.xml")
            configProperties.rootDir = rootDir
            toolVersion = '6.7'
        }
    }
}