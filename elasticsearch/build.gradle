/*
 * The MIT License (MIT)
 *
 * Copyright (c)  2016 the original author or authors.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

plugins {
    id "com.jfrog.bintray" version "1.4"
}

dependencies {
    compile project(':awsbillingtools-s3')
    compile 'org.elasticsearch:elasticsearch:2.2.0' // deprecated
    compile 'io.searchbox:jest:2.0.0'
    compile 'org.projectlombok:lombok:1.16.6'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

apply plugin: "maven-publish"

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier 'sources'
}

def moduleArtifactId = 'awsbillingtools-elasticsearch'

publishing {
    publications {
        Bintray(MavenPublication) {
            from components.java
            artifact sourceJar
            groupId projectGroupId
            artifactId moduleArtifactId
            version project.version
        }
    }
}

bintray {
    pkg {
        userOrg = 'miovision'
        repo = 'maven'
        name = moduleArtifactId
        licenses = ['MIT']
        vcsUrl = projectVcsUrl

        version {
            name = project.version
            released = new Date()
            vcsTag = "v${project.version}"
        }
    }

    if(project.hasProperty('bintrayUser') && project.hasProperty('bintraySecret')) {
        user = bintrayUser
        key = bintraySecret
    }

    publications = ['Bintray']
}
